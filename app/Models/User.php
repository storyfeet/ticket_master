<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

/**
 * This class was generated by Laravel and has remained largely untouched
 * It requires a logged in User to create/edit tickets
 */
class User extends Authenticatable
{
    /** @use HasFactory<\Database\Factories\UserFactory> */
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var list<string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var list<string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }

    static function getByName($name){
        return self::query()->where('name','=',$name)->first();
    }


    function hasRole($role){
        return Role::query()
                ->where('user','=',$this->id)
                ->where('role','=',$role)
                ->count() > 0;
    }

    function isAdmin(){
        return $this->hasRole('admin');
    }

    function lastAction(){
        $lastTicket = Ticket::query()->where('user','=',$this->id)->max("created_at");

        $lastMessage = TicketMessage::query()->where("user_id","=",$this->id)->max("updated_at");
        $lastT = $lastTicket?->updated_at ?? Carbon::createFromTimestamp(0);
        $lastM = $lastMessage?->updated_at ?? Carbon::createFromTimestamp(0);
        return max($lastT,$lastM);
    }
}
